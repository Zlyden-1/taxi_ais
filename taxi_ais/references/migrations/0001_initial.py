# Generated by Django 4.1.7 on 2023-06-21 16:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('taxpayer_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='ИНН')),
                ('registration_cause_code', models.CharField(max_length=20, verbose_name='КПП')),
                ('main_state_registration_number', models.CharField(max_length=20, verbose_name='ОГРН')),
                ('business_activity_code', models.CharField(max_length=20, verbose_name='ОКВЭД')),
                ('organisation', models.CharField(db_index=True, max_length=150, verbose_name='Наименование организации')),
                ('address', models.CharField(db_index=True, max_length=150, verbose_name='Адрес')),
                ('payment_account', models.CharField(max_length=20, verbose_name='р/с')),
                ('bank_name', models.CharField(max_length=150, verbose_name='Банк')),
                ('bank_id', models.CharField(max_length=9, verbose_name='БИК')),
                ('correspondent_account', models.CharField(max_length=20, verbose_name='к/с')),
                ('client_post', models.CharField(max_length=20, verbose_name='Должность')),
                ('client_name', models.CharField(max_length=50, verbose_name='ФИО')),
                ('documents', models.TextField(blank=True, default=None, null=True, verbose_name='Сканы документов')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
                'ordering': ['organisation'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('patronimic', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='ФИО')),
                ('citizenship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Гражданство')),
                ('passport_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Номер паспорта')),
                ('passport_issue_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи паспорта')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('place_of_birth', models.CharField(blank=True, max_length=150, null=True, verbose_name='Место рождения')),
                ('residence_place', models.CharField(blank=True, max_length=150, null=True, verbose_name='Место жительства')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, verbose_name='Номер телефона')),
                ('driving_license_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер прав')),
                ('driving_license_category', models.CharField(blank=True, max_length=30, null=True, verbose_name='Категория')),
                ('driving_license_validity_period', models.DateField(blank=True, null=True, verbose_name='Срок действия')),
                ('rent_sum', models.IntegerField(blank=True, null=True, verbose_name='Аренда')),
                ('deposit', models.IntegerField(blank=True, null=True, verbose_name='Залог')),
                ('status', models.BooleanField(blank=True, default=True, verbose_name='Статус')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('telegram_id', models.CharField(max_length=33, verbose_name='Тег в телеграм')),
            ],
            options={
                'verbose_name': 'Водитель',
                'verbose_name_plural': 'Водители',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('VIN', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('license_plate', models.CharField(blank=True, max_length=10, null=True, verbose_name='Гос. номер')),
                ('registration_certificate_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='№ СТС')),
                ('vehicle_passport_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='№ ПТС')),
                ('engine_id', models.CharField(blank=True, max_length=17, null=True, verbose_name='№ двигателя')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='Цвет')),
                ('leasing_contract_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='№ ДЛ')),
                ('insurance_policy_series', models.CharField(blank=True, max_length=3, null=True, verbose_name='Серия полиса')),
                ('insurance_policy_id', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер полиса')),
                ('leasing_contract_date', models.DateField(blank=True, null=True, verbose_name='Дата ДЛ')),
                ('lessor', models.CharField(blank=True, max_length=50, null=True, verbose_name='Лизингодатель')),
                ('manufacture_year', models.IntegerField(blank=True, null=True, verbose_name='Год выпуска')),
                ('registration_certificate_scan', models.FileField(blank=True, null=True, upload_to='vehicles/registration_certificates/', verbose_name='Скан СТС')),
                ('vehicle_passport_scan', models.FileField(blank=True, null=True, upload_to='vehicles/vehicle_passports/', verbose_name='Скан ПТС')),
                ('rent_type', models.CharField(choices=[('А', 'Аренда'), ('В', 'Выкуп')], max_length=1, null=True, verbose_name='Способ использования')),
                ('driver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle', to='references.driver', verbose_name='Водитель')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=300, verbose_name='Место')),
            ],
            options={
                'verbose_name': 'Локация автомобилей',
                'verbose_name_plural': 'Локации автомобилей',
            },
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Статус')),
                ('is_active', models.BooleanField(verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Статус ТС',
                'verbose_name_plural': 'Статусы ТС',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=20, verbose_name='Марка ТС')),
                ('model', models.CharField(max_length=40, verbose_name='Модель ТС')),
                ('power', models.FloatField(blank=True, null=True, verbose_name='Мощность')),
                ('vehicle_type', models.CharField(max_length=40, verbose_name='Тип ТС')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='Производитель')),
                ('has_gas_cylinder_equipment', models.BooleanField(blank=True, default=False, verbose_name='ГБО')),
                ('rent_price', models.IntegerField(blank=True, null=True, verbose_name='Аренда')),
            ],
            options={
                'verbose_name': 'Тип ТС',
                'verbose_name_plural': 'Типы ТС',
            },
        ),
        migrations.CreateModel(
            name='VehicleHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renting_date', models.DateField(verbose_name='Дата взятия в аренду')),
                ('renting_end_date', models.DateField(blank=True, null=True, verbose_name='Дата сдачи')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.driver', verbose_name='Водитель')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.vehicle', verbose_name='ТС')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='references.vehiclelocation', verbose_name='Место базирования'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='references.vehiclestatus', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='usage_history',
            field=models.ManyToManyField(related_name='vehicles_history', through='references.VehicleHistory', to='references.driver', verbose_name='История использования'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='references.vehicletype', verbose_name='Тип ТС'),
        ),
        migrations.CreateModel(
            name='RentingContractPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='drivers/renting_contracts/', verbose_name='Фото договора аренды')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.driver', verbose_name='Водитель')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DrivingLicensePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='drivers/driving_license_photos/', verbose_name='Фото прав')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.driver', verbose_name='Водитель')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DriverPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='drivers/photos/', verbose_name='Фото водителя')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.driver', verbose_name='Водитель')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DriverPassportPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='drivers/passports/', verbose_name='Фото паспорта')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='references.driver', verbose_name='Водитель')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
